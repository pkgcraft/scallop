name: CI

on:
  push:
    branches-ignore: [deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust-version: ['1.56.0', '1.58.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update deps
      run: cargo update

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v5-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-bash-${{ hashFiles('.git/modules/bash/refs/heads/main') }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v5-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-bash-${{ hashFiles('.git/modules/bash/refs/heads/main') }}-cargo-

    - name: Set up rust toolchain ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: rustfmt

    - name: Various macos set up
      if: matrix.os == 'macos-latest'
      run: |
        # force using clang as a C compiler
        echo "CC=clang" >> $GITHUB_ENV
        echo "CFLAGS=-arch x86_64" >> $GITHUB_ENV

    - name: Build crate
      run: cargo build --examples -vv

    - name: Test crate
      run: cargo test
